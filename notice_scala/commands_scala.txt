# =========================================================
// Validate that java, scala, sbt are installed:
$ java -version
$ scala -version
$ sbt -version

# ===========================================================
// delete all variables
scala > :reset

// clear screen
scala > <Ctrl + l>

// write or paste multi-line code 
scala > :paste

# ===========================================================
// Your first line of code

object HelloWorld {
    def main(args: Array[String]{
        println("Hello, world!")
    }
}

//Let's compile the source file as follows:
$ scalac HelloWorld.scala
$ scala HelloWorld

# ===========================================================
Teoría Scala 🟥

Un objecto Singlenton se declara:

object <ObjectName> {
    // fields, methods, definitions
}

    💡 ObjectName: Identificador unico del Singlenton
    🤖 No admite parámetros de constructor (a diferencia de las clases)
    📌 Puede contener fields, methods, values y cualquier lógica que una clase pueda tener, pero todo está asociado a una instanica.

# ===========================================================
Spark 💥 puede leer datos desde:

    🐘 Sistemas de archivos distribuidos: Como HDFS (Hadoop Distributed File System).
    🪣 Almacenamiento en la nube: Amazon S3, Google Cloud Storage, Azure Blob Storage.
    🗒️ Formatos estructurados: CSV, JSON, Parquet, ORC, Avro.
    🛢️ Bases de datos: JDBC para conectar con MySQL, PostgreSQL, etc.
    🔵 Fuentes en tiempo real: Kafka, Flume.

# ===========================================================



